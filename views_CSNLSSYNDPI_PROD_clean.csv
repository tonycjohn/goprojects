created_on,name,reserved,database_name,schema_name,owner,comment,text,is_secure,is_materialized
2021-01-04 18:45:39.201 -0800,CSL_DSP,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,create or replace VIEW CSL_DSP as select * from CSNLSSYNDPI_PROD..CSL_DSP_20201226;,false,false
2021-01-04 18:45:45.549 -0800,CSL_FEATURE,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,create or replace VIEW CSL_FEATURE as select * from CSNLSSYNDPI_PROD..CSL_FEATURE_20201226;,false,false
2021-01-04 18:42:11.342 -0800,CSL_HRCH,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,create or replace VIEW CSL_HRCH as select * from CSNLSSYNDPI_PROD..CSL_HRCH_20201226;,false,false
2021-01-04 18:42:16.783 -0800,CSL_MAP,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,create or replace VIEW CSL_MAP as select * from CSNLSSYNDPI_PROD..CSL_MAP_20201226;,false,false
2021-01-04 18:45:51.899 -0800,CSL_PRICE,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,create or replace VIEW CSL_PRICE as select * from CSNLSSYNDPI_PROD..CSL_PRICE_20201226;,false,false
2021-01-04 18:47:03.384 -0800,MRKT_ACV_INST,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,create or replace VIEW MRKT_ACV_INST as select * from CSNLSSYNDPI_PROD..MRKT_ACV_INST_20201226;,false,false
2021-01-04 18:47:15.453 -0800,MRKT_AGG_DISAGG,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,create or replace VIEW MRKT_AGG_DISAGG as select * from CSNLSSYNDPI_PROD..MRKT_AGG_DISAGG_20201226;,false,false
2021-01-04 17:34:03.114 -0800,MRKT_DIM_V,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,CREATE OR REPLACE VIEW MRKT_DIM_V AS SELECT * FROM MRKT_DIM;,false,false
2021-01-04 18:46:43.898 -0800,MRKT_POD_ACV_INST_AGG,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,create or replace VIEW MRKT_POD_ACV_INST_AGG as select * from CSNLSSYNDPI_PROD..MRKT_POD_ACV_INST_AGG_20201226;,false,false
2021-01-04 18:46:49.671 -0800,MRKT_POD_ACV_INST_DISAGG,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,create or replace VIEW MRKT_POD_ACV_INST_DISAGG as select * from CSNLSSYNDPI_PROD..MRKT_POD_ACV_INST_DISAGG_20201226;,false,false
2021-01-04 18:47:09.554 -0800,MRKT_POD_AGG_RLTD,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"create or replace VIEW MRKT_POD_AGG_RLTD as select MRKT_KEY,POD_ID,USE_VOL from CSNLSSYNDPI_PROD..MRKT_POD_AGG_RLTD_20201226;",false,false
2021-01-04 18:46:55.146 -0800,POD_ACV_INST,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,create or replace VIEW POD_ACV_INST as select * from CSNLSSYNDPI_PROD..POD_ACV_INST_20201226;,false,false
2021-01-04 17:34:59.372 -0800,PRD_DIM_PREV,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"CREATE OR REPLACE VIEW PRD_DIM_PREV AS ( SELECT A.*,1000000-(TRANSLATE(substr(DECODE(A.PWEEK_DSC,'',NULL,'NULL',NULL,'NOT APPLICABLE',NULL,A.PWEEK_DSC),4,7),'-','')) as PWEEK_ORD,1000000-(TRANSLATE(substr(DECODE(A.PPERIOD_DSC,'',NULL,'NULL',NULL,'NOT APPLICABLE',NULL,A.PPERIOD_DSC),4,7),'-','')) as PPERIOD_ORD,1000000-(TRANSLATE(substr(DECODE(A.PQUARTER_DSC,'',NULL,'NULL',NULL,'NOT APPLICABLE',NULL,A.PQUARTER_DSC),4,7),'-','')) as PQUARTER_ORD,1000000-(TRANSLATE(substr(DECODE(A.PYEAR_DSC,'',NULL,'NULL',NULL,'NOT APPLICABLE',NULL,A.PYEAR_DSC),4,7),'-','')) as PYEAR_ORD FROM CS_OD_MSTR_US_PROD.PUBLIC.CSSYNPRD_PRD_DIM_PREV_CSNLSSYNDPI_PROD_20201226_RPT A WHERE A.PCKG_ID IN ( SELECT PCKG_ID FROM PRD_DIM ));",false,false
2021-01-01 03:26:37.804 -0800,PRD_DIM_V,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"create or replace view PRD_DIM_V as SELECT A.Prd_SP as Prd_SP,A.WEEK_IN_MONTH_DSC as WEEK_IN_MONTH_DSC,A.YTD as YTD,A.MONTHS3 as MONTHS3,A.PQUARTER_ORD as PQUARTER_ORD,A.PRD_ID_YAGO as PRD_ID_YAGO,A.QUARTER_ORD as QUARTER_ORD,A.PRD_SRC_ID as PRD_SRC_ID,A.WEEKS26 as WEEKS26,A.MONTHS12 as MONTHS12,A.RPT_MONTHS as RPT_MONTHS,A.HOLIDAYS as HOLIDAYS,A.PRD_RLS_IND as PRD_RLS_IND,A.PRD_DSP_FOLDER as PRD_DSP_FOLDER,A.FYEAR_ORD as FYEAR_ORD,A.MONTH_IN_QUARTER_DSC as MONTH_IN_QUARTER_DSC,A.NUM_OF_WKS as NUM_OF_WKS,A.WEEK_ORD as WEEK_ORD,A.HALF_YEARS as HALF_YEARS,A.PRD_DSC_SIMPLE as PRD_DSC_SIMPLE,A.YEAR_DSC as YEAR_DSC,A.PPERIOD_DSC as PPERIOD_DSC,A.DSP_FOLDER_AD as DSP_FOLDER_AD,A.FQUARTER_IN_YEAR_DSC as FQUARTER_IN_YEAR_DSC,A.PRD_TAG as PRD_TAG,A.WEEKS52 as WEEKS52,A.MONTH_ORD as MONTH_ORD,A.PMONTH_DSC as PMONTH_DSC,A.SWEEK_IN_YEAR_DSC as SWEEK_IN_YEAR_DSC,A.WEEKS4 as WEEKS4,A.SMONTH_IN_QUARTER_DSC as SMONTH_IN_QUARTER_DSC,A.PRD_ID as PRD_ID,A.FILTER_NAME as FILTER_NAME,A.PWEEK_DSC as PWEEK_DSC,A.QUARTERS as QUARTERS,A.PYEAR_DSC as PYEAR_DSC,A.WEEKS24 as WEEKS24,A.MONTHS6 as MONTHS6,A.QTD as QTD,A.PRD_DET_LVL as PRD_DET_LVL,A.CADENCE as CADENCE,A.WEEKS4_ORD as WEEKS4_ORD,A.DT_SRC_DTL_NM as DT_SRC_DTL_NM,A.PWEEK_ORD as PWEEK_ORD,A.PQUARTER_DSC as PQUARTER_DSC,A.MONTHS1 as MONTHS1,A.QUARTER_IN_YEAR_DSC as QUARTER_IN_YEAR_DSC,A.MONTHS as MONTHS,A.WEEKS12 as WEEKS12,A.CUME_END_DT as CUME_END_DT,A.MONTHLY as MONTHLY,A.PRD_DSP_ORDER as PRD_DSP_ORDER,A.DIM_TYP as DIM_TYP,A.SQUARTER_IN_YEAR_DSC as SQUARTER_IN_YEAR_DSC,A.WK_ENDING_DT as WK_ENDING_DT,A.PERIOD_TO_DATE as PERIOD_TO_DATE,A.PRD_DSC_LONG as PRD_DSC_LONG,A.SPERIOD_DSC as SPERIOD_DSC,A.WK_ENDING_DSC as WK_ENDING_DSC,A.PRD_DSC_SHORT as PRD_DSC_SHORT,A.CURRENT_PERIODS as CURRENT_PERIODS,A.HOLIDAY_PERIODS as HOLIDAY_PERIODS,A.FYEAR_DSC as FYEAR_DSC,A.HYTD as HYTD,A.SYEAR_DSC as SYEAR_DSC,A.CALENDAR as CALENDAR,A.PRD_KEY as PRD_KEY,A.CUME_RUL_TYP as CUME_RUL_TYP,A.CALENDAR_CADENCE as CALENDAR_CADENCE,A.PYEAR_ORD as PYEAR_ORD,A.INTEGRATION as INTEGRATION,A.WEEKS13 as WEEKS13,A.QUARTERS_RTA as QUARTERS_RTA,A.HALF_YEARS_RTA as HALF_YEARS_RTA,A.PPERIOD_ORD as PPERIOD_ORD,A.PCKG_ID as PCKG_ID,A.YEAR_ORD as YEAR_ORD FROM CS_OD_MSTR_US_PROD.PUBLIC.CSSYNPRD_PRD_DIM_CSNLSSYNDPI_PROD_20201226_RPT A WHERE (
( 
-- Start Rule Based Restrictions

( 
--- GRP_ID: 1

( 
--- GRP_ID: 1 and SUB_GRP_ID: 1

( 
--- Start of INCLUDE
( A.DT_SRC_DTL_NM = 'ON-DEMAND 12E 445 SYNDICATED CALENDAR' or A.DT_SRC_DTL_NM = 'ON-DEMAND 13A 444 SYNDICATED CALENDAR' )AND( A.PCKG_ID = '160' or A.PCKG_ID = '163' or A.PCKG_ID = '60' or A.PCKG_ID = '63' )) 
--- End of INCLUDE

) 
-- End of SUB_GRP_ID 1

) 
-- End of GRP_ID 1

) 
-- End Rule Based Restrictions
);",false,false
2021-01-04 18:42:04.651 -0800,TRND_SBST_AGG,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,create or replace VIEW TRND_SBST_AGG as select * from CSNLSSYNDPI_PROD..TRND_SBST_AGG_20201226;,false,false
2021-01-04 17:40:59.134 -0800,PRDC_HRCH,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"CREATE OR REPLACE VIEW PRDC_HRCH AS ( SELECT CTG_DFL_ID, EFC_DT, ESPEC_BRAND_ID, MULTIPACK, INSERT_TS, PRC_CNVR_FCTR_1, PRC_CNVR_FCTR_2, PRC_CNVR_SZ_1, PRC_CNVR_SZ_2, PRDC_KEY, SCD_ID, TRND_PRDC_ID, U_CNVR_FCTR_1, U_CNVR_FCTR_2, U_CNVR_SZ_1, U_CNVR_SZ_2, VALID_TO FROM CS_OD_MSTR_US_PROD.PUBLIC.CSSYNDPRDC_PRDC_HRCH_CSNLSSYNDPI_PROD_20201226_RPT WHERE PRDC_KEY IN (SELECT DISTINCT PRDC_KEY FROM PRDC_DIM) and SRC in (SELECT DISTINCT DT_SRC_DTL_NM FROM CS_OD_MSTR_US_PROD.PUBLIC.CSSYNDPRDC_DB_DT_SRC_PRTY_20201226_SYN where DB_NM='CSNLSSYNDPI_PROD'));",false,false
2021-01-04 19:03:08.873 -0800,TRND_SBST_AGG_EQ,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"create or replace view TRND_SBST_AGG_EQ
        as
	select ts2.PRD_ID,ts2.TRND_PRDC_ID,ts2.POD_ID,ts2.CSL_ID,ts2.PRDC_KEY,ts2.DSP_K,ts2.UNITS,ts2.BUNITS,ts2.DOL,ts2.BDOL,ts2.ACV,ts2.FTR,ts2.DSP,ts2.PRICE_MULT,ts2.TPR,ts2.LONGSLS_FLG,
	NVL(MPACK_FCTR,0)::numeric(18,8) AS MPACK_FCTR,
	NVL(MPACK_FCTR2,0)::numeric(18,8) AS MPACK_FCTR2
	from (
        select ts.PRD_ID,ts.TRND_PRDC_ID,ts.POD_ID,ts.CSL_ID,ts.PRDC_KEY,ts.DSP_K,ts.UNITS,ts.BUNITS,ts.DOL,ts.BDOL,ts.ACV,ts.FTR,ts.DSP,ts.PRICE_MULT,ts.TPR,ts.LONGSLS_FLG,
        nvl( CASE WHEN ph.U_CNVR_FCTR_1 <> 0 THEN PH.MULTIPACK * PH.U_CNVR_SZ_1 / PH.U_CNVR_FCTR_1 else 0 end,0) AS MPACK_FCTR,
	nvl( CASE WHEN ph.U_CNVR_FCTR_2 <> 0 THEN PH.MULTIPACK * PH.U_CNVR_SZ_2 / PH.U_CNVR_FCTR_2 else 0 end,0) AS MPACK_FCTR2
        from  TRND_SBST_AGG ts
        JOIN (select distinct PRD_ID, WK_ENDING_DT from PRD_DIM where PRD_DET_LVL = 'WEEK') pd
        on pd.PRD_ID = ts.PRD_ID
        LEFT OUTER JOIN PRDC_HRCH ph
        on ph.trnd_prdc_id = ts.trnd_prdc_id
        and ph.prdc_key = ts.prdc_key
        and pd.WK_ENDING_DT between  ph.EFC_DT and ph.VALID_TO) ts2;",false,false
2021-01-04 18:42:23.406 -0800,TRND_SBST_AGG_NON_BL,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"create or replace VIEW TRND_SBST_AGG_NON_BL as select PRD_ID,TRND_PRDC_ID,POD_ID,CSL_ID,PRDC_KEY,UNITS,DOL,ACV,DSP_K,FTR,DSP,PRICE_MULT,TPR,LONGSLS_FLG,MPACK_FCTR from CSNLSSYNDPI_PROD..TRND_SBST_AGG_20201226 where UNITS > 0 or DOL > 0;",false,false
2021-01-04 19:03:19.803 -0800,TRND_SBST_AGG_NON_BL_EQ,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"create or replace view TRND_SBST_AGG_NON_BL_EQ
        as
	select ts2.PRD_ID,ts2.TRND_PRDC_ID,ts2.POD_ID,ts2.CSL_ID,ts2.PRDC_KEY,ts2.UNITS,ts2.DOL,ts2.ACV,ts2.DSP_K,ts2.FTR,ts2.DSP,ts2.PRICE_MULT,ts2.TPR,ts2.LONGSLS_FLG,
	NVL(MPACK_FCTR,0)::numeric(18,8) AS MPACK_FCTR,
	NVL(MPACK_FCTR2,0)::numeric(18,8) AS MPACK_FCTR2
	from (
        select ts.PRD_ID,ts.TRND_PRDC_ID,ts.POD_ID,ts.CSL_ID,ts.PRDC_KEY,ts.UNITS,ts.DOL,ts.ACV,ts.DSP_K,ts.FTR,ts.DSP,ts.PRICE_MULT,ts.TPR,ts.LONGSLS_FLG,
        nvl( CASE WHEN ph.U_CNVR_FCTR_1 <> 0 THEN PH.MULTIPACK * PH.U_CNVR_SZ_1 / PH.U_CNVR_FCTR_1 else 0 end,0) AS MPACK_FCTR,
	nvl( CASE WHEN ph.U_CNVR_FCTR_2 <> 0 THEN PH.MULTIPACK * PH.U_CNVR_SZ_2 / PH.U_CNVR_FCTR_2 else 0 end,0) AS MPACK_FCTR2
        from  TRND_SBST_AGG_NON_BL ts
        JOIN (select distinct PRD_ID, WK_ENDING_DT from PRD_DIM where PRD_DET_LVL = 'WEEK') pd
        on pd.PRD_ID = ts.PRD_ID
        LEFT OUTER JOIN PRDC_HRCH ph
        on ph.trnd_prdc_id = ts.trnd_prdc_id
        and ph.prdc_key = ts.prdc_key
        and pd.WK_ENDING_DT between  ph.EFC_DT and ph.VALID_TO) ts2;",false,false
2021-01-04 18:45:12.926 -0800,TRND_SBST_DISAGG,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,create or replace VIEW TRND_SBST_DISAGG as select * from CSNLSSYNDPI_PROD..TRND_SBST_DISAGG_20201226;,false,false
2021-01-04 19:03:14.392 -0800,TRND_SBST_DISAGG_EQ,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"create or replace view TRND_SBST_DISAGG_EQ
        as
	select ts2.PRD_ID,ts2.TRND_PRDC_ID,ts2.POD_ID,ts2.CSL_ID,ts2.PRDC_KEY,ts2.DSP_K,ts2.UNITS,ts2.BUNITS,ts2.DOL,ts2.BDOL,ts2.ACV,ts2.FTR,ts2.DSP,ts2.PRICE_MULT,ts2.TPR,ts2.LONGSLS_FLG,
	NVL(MPACK_FCTR,0)::numeric(18,8) AS MPACK_FCTR,
	NVL(MPACK_FCTR2,0)::numeric(18,8) AS MPACK_FCTR2
	from (
        select ts.PRD_ID,ts.TRND_PRDC_ID,ts.POD_ID,ts.CSL_ID,ts.PRDC_KEY,ts.DSP_K,ts.UNITS,ts.BUNITS,ts.DOL,ts.BDOL,ts.ACV,ts.FTR,ts.DSP,ts.PRICE_MULT,ts.TPR,ts.LONGSLS_FLG,
        nvl( CASE WHEN ph.U_CNVR_FCTR_1 <> 0 THEN PH.MULTIPACK * PH.U_CNVR_SZ_1 / PH.U_CNVR_FCTR_1 else 0 end,0) AS MPACK_FCTR,
	nvl( CASE WHEN ph.U_CNVR_FCTR_2 <> 0 THEN PH.MULTIPACK * PH.U_CNVR_SZ_2 / PH.U_CNVR_FCTR_2 else 0 end,0) AS MPACK_FCTR2
        from  TRND_SBST_DISAGG ts
        JOIN (select distinct PRD_ID, WK_ENDING_DT from PRD_DIM where PRD_DET_LVL = 'WEEK') pd
        on pd.PRD_ID = ts.PRD_ID
        LEFT OUTER JOIN PRDC_HRCH ph
        on ph.trnd_prdc_id = ts.trnd_prdc_id
        and ph.prdc_key = ts.prdc_key
        and pd.WK_ENDING_DT between  ph.EFC_DT and ph.VALID_TO) ts2;",false,false
2021-01-04 18:45:20.365 -0800,TRND_SBST_DISAGG_NON_ADD,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"create or replace VIEW TRND_SBST_DISAGG_NON_ADD as select PRD_ID,TRND_PRDC_ID,POD_ID,CSL_ID,PRDC_KEY,1::BYTEINT AS UNITS,DSP_K,FTR,DSP,PRICE_MULT,TPR,LONGSLS_FLG from CSNLSSYNDPI_PROD..TRND_SBST_DISAGG_20201226 where UNITS > 0;",false,false
2021-01-04 18:45:33.274 -0800,TRND_SBST_DISAGG_NON_BL,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"create or replace VIEW TRND_SBST_DISAGG_NON_BL as select PRD_ID,TRND_PRDC_ID,POD_ID,CSL_ID,PRDC_KEY,UNITS,DOL,ACV,DSP_K,FTR,DSP,PRICE_MULT,TPR,LONGSLS_FLG,MPACK_FCTR from CSNLSSYNDPI_PROD..TRND_SBST_DISAGG_20201226 where UNITS > 0 or DOL > 0;",false,false
2021-01-04 19:03:24.995 -0800,TRND_SBST_DISAGG_NON_BL_EQ,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"create or replace view TRND_SBST_DISAGG_NON_BL_EQ
        as
	select ts2.PRD_ID,ts2.TRND_PRDC_ID,ts2.POD_ID,ts2.CSL_ID,ts2.PRDC_KEY,ts2.UNITS,ts2.DOL,ts2.ACV,ts2.DSP_K,ts2.FTR,ts2.DSP,ts2.PRICE_MULT,ts2.TPR,ts2.LONGSLS_FLG,
	NVL(MPACK_FCTR,0)::numeric(18,8) AS MPACK_FCTR,
	NVL(MPACK_FCTR2,0)::numeric(18,8) AS MPACK_FCTR2
	from (
        select ts.PRD_ID,ts.TRND_PRDC_ID,ts.POD_ID,ts.CSL_ID,ts.PRDC_KEY,ts.UNITS,ts.DOL,ts.ACV,ts.DSP_K,ts.FTR,ts.DSP,ts.PRICE_MULT,ts.TPR,ts.LONGSLS_FLG,
        nvl( CASE WHEN ph.U_CNVR_FCTR_1 <> 0 THEN PH.MULTIPACK * PH.U_CNVR_SZ_1 / PH.U_CNVR_FCTR_1 else 0 end,0) AS MPACK_FCTR,
	nvl( CASE WHEN ph.U_CNVR_FCTR_2 <> 0 THEN PH.MULTIPACK * PH.U_CNVR_SZ_2 / PH.U_CNVR_FCTR_2 else 0 end,0) AS MPACK_FCTR2
        from  TRND_SBST_DISAGG_NON_BL ts
        JOIN (select distinct PRD_ID, WK_ENDING_DT from PRD_DIM where PRD_DET_LVL = 'WEEK') pd
        on pd.PRD_ID = ts.PRD_ID
        LEFT OUTER JOIN PRDC_HRCH ph
        on ph.trnd_prdc_id = ts.trnd_prdc_id
        and ph.prdc_key = ts.prdc_key
        and pd.WK_ENDING_DT between  ph.EFC_DT and ph.VALID_TO) ts2;",false,false
2021-01-04 18:45:27.180 -0800,TRND_SBST_DISAGG_REACH,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,create or replace VIEW TRND_SBST_DISAGG_REACH as select * from CSNLSSYNDPI_PROD..TRND_SBST_DISAGG_REACH_20201226;,false,false
2021-01-04 17:35:00.163 -0800,V_PRD_DIM,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"CREATE OR REPLACE VIEW V_PRD_DIM AS
            SELECT
            PRD_DIM.PRD_ID, PRD_DIM.PRD_KEY,
            PRD_DIM.PRD_ID_YAGO, PRD_DIM.PRD_DSC_SHORT,
            PRD_DIM.PRD_DSC_LONG, PRD_DIM.PRD_DSP_ORDER,
            PRD_DIM.PRD_DET_LVL, PRD_DIM.PRD_TAG,
            PRD_DIM.WK_ENDING_DT, PRD_DIM.WK_ENDING_DSC,
            PRD_DIM.NUM_OF_WKS, PRD_DIM.FILTER_NAME,
            PRD_DIM.PRD_DSP_FOLDER, PRD_DIM.WEEK_ORD,
            PRD_DIM.WEEK_IN_MONTH_DSC, PRD_DIM.MONTH_ORD,
            PRD_DIM.MONTH_IN_QUARTER_DSC, PRD_DIM.QUARTER_ORD,
            PRD_DIM.QUARTER_IN_YEAR_DSC, PRD_DIM.YEAR_ORD,
            PRD_DIM.YEAR_DSC, PRD_DIM.PRD_RLS_IND,
            PRD_DIM.FYEAR_DSC, PRD_DIM.FQUARTER_IN_YEAR_DSC,
            PRD_DIM.PYEAR_ORD, PRD_DIM.PPERIOD_ORD,
            PRD_DIM.PQUARTER_ORD, PRD_DIM.PWEEK_ORD,
            PRD_DIM.CALENDAR_CADENCE, PRD_DIM.PCKG_ID,
            PRD_DIM.INTEGRATION
            FROM
            PRD_DIM PRD_DIM
            WHERE
            (
                PRD_RLS_IND = 'Y'
            );",false,false
2021-01-04 17:35:01.181 -0800,V_PRD_DIM_CRNT,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"CREATE OR REPLACE VIEW V_PRD_DIM_CRNT AS
        SELECT
        PRD_DIM.PRD_TAG, PRD_DIM.YEAR_ORD,
        PRD_DIM.MONTH_ORD, PRD_DIM.NUM_OF_WKS,
        PRD_DIM.PRD_DET_LVL, PRD_DIM.PRD_DSC_LONG,
        PRD_DIM.PRD_DSC_SHORT, PRD_DIM.PRD_DSP_FOLDER,
        PRD_DIM.PRD_DSP_ORDER, PRD_DIM.PRD_ID,
        PRD_DIM.PRD_ID_YAGO, PRD_DIM.PRD_KEY,
        PRD_DIM.QUARTER_IN_YEAR_DSC, PRD_DIM.QUARTER_ORD,
        PRD_DIM.WEEK_IN_MONTH_DSC, PRD_DIM.WEEK_ORD,
        PRD_DIM.WK_ENDING_DT, PRD_DIM.WK_ENDING_DSC,
        PRD_DIM.YEAR_DSC, PRD_DIM.FILTER_NAME,
        PRD_DIM.MONTH_IN_QUARTER_DSC, PRD_DIM.PRD_RLS_IND,
        PRD_DIM.FYEAR_ORD, PRD_DIM.FYEAR_DSC,
        PRD_DIM.FQUARTER_IN_YEAR_DSC, PRD_DIM.WEEKS4,
        PRD_DIM.WEEKS4_ORD, PRD_DIM.HOLIDAYS,
        PRD_DIM.SYEAR_DSC, PRD_DIM.SQUARTER_IN_YEAR_DSC,
        PRD_DIM.SPERIOD_DSC, PRD_DIM.SWEEK_IN_YEAR_DSC,
        PRD_DIM.SMONTH_IN_QUARTER_DSC, PRD_DIM.PYEAR_DSC,
        PRD_DIM.PQUARTER_DSC, PRD_DIM.PPERIOD_DSC,
        PRD_DIM.PWEEK_DSC, PRD_DIM.PMONTH_DSC,
        PRD_DIM.PYEAR_ORD, PRD_DIM.PPERIOD_ORD,
        PRD_DIM.PQUARTER_ORD, PRD_DIM.PWEEK_ORD,
        PRD_DIM.CALENDAR_CADENCE, PRD_DIM.PCKG_ID,
        PRD_DIM.INTEGRATION
        FROM
        PRD_DIM
        PRD_DIM
        WHERE
        (
            PRD_DIM.PRD_RLS_IND = 'Y'
        );",false,false
2021-01-04 17:35:26.483 -0800,V_PRD_DIM_FUTURE,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"CREATE OR REPLACE VIEW V_PRD_DIM_FUTURE AS SELECT PRD_ID,PRD_KEY,PRD_ID_YAGO,PRD_DSC_SHORT,
        PRD_DSC_LONG,PRD_DSP_ORDER,PRD_DET_LVL,PRD_TAG,WK_ENDING_DT,WK_ENDING_DSC,NUM_OF_WKS,FILTER_NAME,PRD_DSP_FOLDER,
        PRD_RLS_IND,WEEK_ORD,WEEK_IN_MONTH_DSC,MONTH_ORD,MONTH_IN_QUARTER_DSC,QUARTER_ORD,QUARTER_IN_YEAR_DSC,YEAR_ORD,
        YEAR_DSC, CALENDAR_CADENCE, PCKG_ID, INTEGRATION FROM V_PRD_DIM_FUTURE_BUILD;",false,false
2021-01-04 17:35:13.265 -0800,V_PRD_DIM_FUTURE_BUILD,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"CREATE OR REPLACE VIEW V_PRD_DIM_FUTURE_BUILD AS
        SELECT
        CUMES.PRD_ID, CUMES.PRD_KEY, CUMES.PRD_ID_YAGO, CUMES.PRD_DSC_SHORT,
        CUMES.PRD_DSC_LONG, CUMES.PRD_DSP_ORDER, CUMES.PRD_DET_LVL, CUMES.PRD_TAG,
        CUMES.WK_ENDING_DT, CUMES.WK_ENDING_DSC, CUMES.NUM_OF_WKS,
        CUMES.FILTER_NAME, CUMES.PRD_DSP_FOLDER,  CUMES.PRD_RLS_IND,
        CASE WHEN (CUMES.PRD_DSP_FOLDER = 'Weeks') THEN WEEKS.WEEK_ORD ELSE CUMES.WEEK_ORD END AS WEEK_ORD,
        CASE WHEN (CUMES.PRD_DSP_FOLDER = 'Weeks') THEN WEEKS.WEEK_IN_MONTH_DSC ELSE CUMES.WEEK_IN_MONTH_DSC END 
        AS WEEK_IN_MONTH_DSC,
        CASE WHEN ((CUMES.PRD_DSP_FOLDER = 'Weeks') OR (CUMES.PRD_DSP_FOLDER = 'Months')) 
        THEN WEEKS.MONTH_ORD ELSE CUMES.MONTH_ORD END AS MONTH_ORD,
        CASE WHEN ((CUMES.PRD_DSP_FOLDER = 'Weeks') OR (CUMES.PRD_DSP_FOLDER = 'Months')) 
        THEN WEEKS.MONTH_IN_QUARTER_DSC ELSE CUMES.MONTH_IN_QUARTER_DSC END AS MONTH_IN_QUARTER_DSC,
        CASE WHEN (((CUMES.PRD_DSP_FOLDER = 'Weeks') OR (CUMES.PRD_DSP_FOLDER = 'Months')) OR 
        (CUMES.PRD_DSP_FOLDER = 'Quarters')) THEN WEEKS.QUARTER_ORD ELSE CUMES.QUARTER_ORD END AS QUARTER_ORD,
        CASE WHEN (((CUMES.PRD_DSP_FOLDER = 'Weeks') OR (CUMES.PRD_DSP_FOLDER = 'Months')) OR 
        (CUMES.PRD_DSP_FOLDER = 'Quarters')) THEN WEEKS.QUARTER_IN_YEAR_DSC ELSE CUMES.QUARTER_IN_YEAR_DSC END 
        AS QUARTER_IN_YEAR_DSC, WEEKS.YEAR_ORD, WEEKS.YEAR_DSC, CUMES.CALENDAR_CADENCE, CUMES.PCKG_ID,
        CUMES.INTEGRATION
        FROM
        (
            SELECT
            V_PRD_DIM_YE.PRD_ID, V_PRD_DIM_YE.WEEK_ORD, V_PRD_DIM_YE.WEEK_IN_MONTH_DSC,
            V_PRD_DIM_YE.MONTH_ORD, V_PRD_DIM_YE.MONTH_IN_QUARTER_DSC,
            V_PRD_DIM_YE.QUARTER_ORD,  V_PRD_DIM_YE.QUARTER_IN_YEAR_DSC,
            V_PRD_DIM_YE.YEAR_ORD, V_PRD_DIM_YE.YEAR_DSC
            FROM V_PRD_DIM_YE V_PRD_DIM_YE
            WHERE ( V_PRD_DIM_YE.PRD_DET_LVL = 'WEEK')
        ) WEEKS,
        (
            SELECT
            V_PRD_DIM_YE.PRD_ID, V_PRD_DIM_YE.PRD_KEY,
            V_PRD_DIM_YE.PRD_ID_YAGO, V_PRD_DIM_YE.PRD_DSC_SHORT,
            V_PRD_DIM_YE.PRD_DSC_LONG, V_PRD_DIM_YE.PRD_DSP_ORDER,
            V_PRD_DIM_YE.PRD_DET_LVL, V_PRD_DIM_YE.PRD_TAG,
            V_PRD_DIM_YE.WK_ENDING_DT, V_PRD_DIM_YE.WK_ENDING_DSC,
            V_PRD_DIM_YE.NUM_OF_WKS, V_PRD_DIM_YE.FILTER_NAME,
            V_PRD_DIM_YE.PRD_DSP_FOLDER, V_PRD_DIM_YE.WEEK_ORD,
            V_PRD_DIM_YE.WEEK_IN_MONTH_DSC, V_PRD_DIM_YE.MONTH_ORD,
            V_PRD_DIM_YE.MONTH_IN_QUARTER_DSC, V_PRD_DIM_YE.QUARTER_ORD,
            V_PRD_DIM_YE.QUARTER_IN_YEAR_DSC, V_PRD_DIM_YE.YEAR_ORD,
            V_PRD_DIM_YE.YEAR_DSC, V_PRD_DIM_YE.PRD_RLS_IND,
            V_PRD_DIM_YE.CALENDAR_CADENCE, V_PRD_DIM_YE.PCKG_ID,
            V_PRD_DIM_YE.INTEGRATION
            FROM V_PRD_DIM_YE V_PRD_DIM_YE
            WHERE
            ( V_PRD_DIM_YE.PRD_DSP_FOLDER IN (('Years')::VARCHAR(20), ('Half Years')::VARCHAR(20), (
            'Quarters')::VARCHAR(20), ('Months')::VARCHAR(20), ('Weeks')::VARCHAR(20)))
        ) CUMES
        WHERE(WEEKS.PRD_ID = CUMES.PRD_ID);",false,false
2021-01-04 17:35:22.655 -0800,V_PRD_DIM_NEW_ITEM,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"CREATE OR REPLACE VIEW V_PRD_DIM_NEW_ITEM AS SELECT PRD_ID, PRD_KEY, FILTER_NAME, 
        PRD_DET_LVL, NEW_ITEM_RANGE_START, NEW_ITEM_RANGE_END, YEAR_DSC, QUARTER_IN_YEAR_DSC, MONTH_IN_QUARTER_DSC, 
        WEEK_IN_MONTH_DSC, PRD_TAG, YEAR_ORD, MONTH_ORD, NUM_OF_WKS, PRD_DSC_LONG, PRD_DSC_SHORT, PRD_DSP_FOLDER, 
        PRD_DSP_ORDER, PRD_ID_YAGO, QUARTER_ORD, WEEK_ORD, WK_ENDING_DT, WK_ENDING_DSC, PRD_RLS_IND, CALENDAR_CADENCE,
        PCKG_ID, INTEGRATION
        FROM V_PRD_DIM_NEW_ITEM_BUILD;",false,false
2021-01-04 17:35:08.519 -0800,V_PRD_DIM_NEW_ITEM_BUILD,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"CREATE OR REPLACE VIEW V_PRD_DIM_NEW_ITEM_BUILD (
        PRD_ID, PRD_KEY, FILTER_NAME,
        PRD_DET_LVL, NEW_ITEM_RANGE_START,
        NEW_ITEM_RANGE_END, YEAR_DSC,
        QUARTER_IN_YEAR_DSC, MONTH_IN_QUARTER_DSC,
        WEEK_IN_MONTH_DSC, PRD_TAG,
        YEAR_ORD, MONTH_ORD,
        NUM_OF_WKS, PRD_DSC_LONG,
        PRD_DSC_SHORT, PRD_DSP_FOLDER,
        PRD_DSP_ORDER, PRD_ID_YAGO,
        QUARTER_ORD, WEEK_ORD,
        WK_ENDING_DT, WK_ENDING_DSC, PRD_RLS_IND, 
        CALENDAR_CADENCE, PCKG_ID, INTEGRATION) AS
            SELECT
            V_PRD_DIM_CRNT.PRD_ID, V_PRD_DIM_CRNT.PRD_KEY ,
            V_PRD_DIM_CRNT.FILTER_NAME , V_PRD_DIM_CRNT.PRD_DET_LVL ,
            V_PRD_DIM_CRNT.NEW_ITEM_RANGE_START, V_PRD_DIM_CRNT.NEW_ITEM_RANGE_END ,
            V_PRD_DIM_CRNT.YEAR_DSC, V_PRD_DIM_CRNT.QUARTER_IN_YEAR_DSC ,
            V_PRD_DIM_CRNT.MONTH_IN_QUARTER_DSC, V_PRD_DIM_CRNT.WEEK_IN_MONTH_DSC   ,
            V_PRD_DIM_CRNT.PRD_TAG, V_PRD_DIM_CRNT.YEAR_ORD,
            V_PRD_DIM_CRNT.MONTH_ORD, V_PRD_DIM_CRNT.NUM_OF_WKS  ,
            V_PRD_DIM_CRNT.PRD_DSC_LONG, V_PRD_DIM_CRNT.PRD_DSC_SHORT ,
            V_PRD_DIM_CRNT.PRD_DSP_FOLDER, V_PRD_DIM_CRNT.PRD_DSP_ORDER ,
            V_PRD_DIM_CRNT.PRD_ID_YAGO, V_PRD_DIM_CRNT.QUARTER_ORD ,
            V_PRD_DIM_CRNT.WEEK_ORD, V_PRD_DIM_CRNT.WK_ENDING_DT,
            V_PRD_DIM_CRNT.WK_ENDING_DSC, V_PRD_DIM_CRNT.PRD_RLS_IND,
            V_PRD_DIM_CRNT.CALENDAR_CADENCE, V_PRD_DIM_CRNT.PCKG_ID,
            V_PRD_DIM_CRNT.INTEGRATION
            FROM (
                SELECT
                V_PRD_DIM_CRNT.PRD_ID,V_PRD_DIM_CRNT.PRD_KEY,
                V_PRD_DIM_CRNT.FILTER_NAME,V_PRD_DIM_CRNT.PRD_DET_LVL,V_PRD_DIM_CRNT.NEW_ITEM_RANGE_START,
                V_PRD_DIM_CRNT.NEW_ITEM_RANGE_END,
                V_PRD_DIM_CRNT.YEAR_DSC,V_PRD_DIM_CRNT.QUARTER_IN_YEAR_DSC,V_PRD_DIM_CRNT.MONTH_IN_QUARTER_DSC,
                V_PRD_DIM_CRNT.WEEK_IN_MONTH_DSC,V_PRD_DIM_CRNT.PRD_TAG,
                V_PRD_DIM_CRNT.YEAR_ORD,V_PRD_DIM_CRNT.MONTH_ORD,V_PRD_DIM_CRNT.NUM_OF_WKS  ,
                V_PRD_DIM_CRNT.PRD_DSC_LONG,
                V_PRD_DIM_CRNT.PRD_DSC_SHORT ,V_PRD_DIM_CRNT.PRD_DSP_FOLDER,V_PRD_DIM_CRNT.PRD_DSP_ORDER ,
                V_PRD_DIM_CRNT.PRD_ID_YAGO ,
                V_PRD_DIM_CRNT.QUARTER_ORD ,V_PRD_DIM_CRNT.WEEK_ORD,V_PRD_DIM_CRNT.WK_ENDING_DT,
                V_PRD_DIM_CRNT.WK_ENDING_DSC,V_PRD_DIM_CRNT.PRD_RLS_IND,
                V_PRD_DIM_CRNT.CALENDAR_CADENCE, V_PRD_DIM_CRNT.PCKG_ID, V_PRD_DIM_CRNT.INTEGRATION
                FROM (
                    (
                        (
                            (
                                SELECT
                                A.PRD_ID, A.PRD_KEY  ,
                                A.FILTER_NAME, A.PRD_DET_LVL,
                                ('    ')::VARCHAR(4) AS YEAR_DSC,
                                ('       ')::VARCHAR(7) AS QUARTER_IN_YEAR_DSC ,
                                ('        ')::VARCHAR(8) AS MONTH_IN_QUARTER_DSC,
                                A.WEEK_IN_MONTH_DSC,
                                ('    ')::VARCHAR(4) AS YR_DSC  ,
                                ('       '):: VARCHAR(7) AS QTR_DSC ,
                                ('        ')::VARCHAR(8) AS MONTH_DSC ,
                                B.WEEK_DSC , B.NEW_ITEM_RANGE_START ,
                                B.NEW_ITEM_RANGE_END, A.PRD_TAG,
                                A.YEAR_ORD , A.MONTH_ORD,
                                A.NUM_OF_WKS , A.PRD_DSC_LONG,
                                A.PRD_DSC_SHORT, A.PRD_DSP_FOLDER,
                                A.PRD_DSP_ORDER, A.PRD_ID_YAGO,
                                A.QUARTER_ORD , A.WEEK_ORD ,
                                A.WK_ENDING_DT , A.WK_ENDING_DSC ,
                                A.PRD_RLS_IND,
                                A.CALENDAR_CADENCE, A.PCKG_ID, A.INTEGRATION
                                FROM V_PRD_DIM_CRNT A ,
                                (SELECT
                                    V_PRD_DIM_CRNT.WEEK_IN_MONTH_DSC AS WEEK_DSC,
                                    MIN(V_PRD_DIM_CRNT.WK_ENDING_DT) AS NEW_ITEM_RANGE_START,
                                    MAX(V_PRD_DIM_CRNT.WK_ENDING_DT) AS NEW_ITEM_RANGE_END
                                    FROM V_PRD_DIM_CRNT V_PRD_DIM_CRNT
                                    WHERE ( V_PRD_DIM_CRNT.PRD_DET_LVL = 'WEEK')
                                GROUP BY V_PRD_DIM_CRNT.WEEK_IN_MONTH_DSC ) B
                                WHERE ( A.WEEK_IN_MONTH_DSC = B.WEEK_DSC)
                                UNION ALL
                                SELECT
                                A.PRD_ID , A.PRD_KEY, A.FILTER_NAME ,
                                A.PRD_DET_LVL ,
                                ('    ')::VARCHAR(4) AS YEAR_DSC ,
                                ('       ')::VARCHAR(7) AS QUARTER_IN_YEAR_DSC  ,
                                A.MONTH_IN_QUARTER_DSC,
                                ('                                                  ')::VARCHAR(50) 
                                AS WEEK_IN_MONTH_DSC,
                                ('    ')::VARCHAR(4)  AS YR_DSC   ,
                                ('       ')::VARCHAR(7)  AS QTR_DSC  ,
                                B.MONTH_DSC   ,
                                ('                                                ')::VARCHAR(50) AS WEEK_DSC,
                                B.NEW_ITEM_RANGE_START,
                                B.NEW_ITEM_RANGE_END  ,
                                A.PRD_TAG, A.YEAR_ORD,
                                A.MONTH_ORD , A.NUM_OF_WKS  ,
                                A.PRD_DSC_LONG, A.PRD_DSC_SHORT ,
                                A.PRD_DSP_FOLDER, A.PRD_DSP_ORDER ,
                                A.PRD_ID_YAGO , A.QUARTER_ORD ,
                                A.WEEK_ORD, A.WK_ENDING_DT,
                                A.WK_ENDING_DSC, A.PRD_RLS_IND,
                                A.CALENDAR_CADENCE, A.PCKG_ID, A.INTEGRATION
                                FROM V_PRD_DIM_CRNT A,
                                (SELECT
                                    V_PRD_DIM_CRNT.MONTH_IN_QUARTER_DSC AS MONTH_DSC   ,
                                    MIN(V_PRD_DIM_CRNT.WK_ENDING_DT)    AS NEW_ITEM_RANGE_START,
                                    MAX(V_PRD_DIM_CRNT.WK_ENDING_DT)    AS NEW_ITEM_RANGE_END
                                    FROM V_PRD_DIM_CRNT V_PRD_DIM_CRNT
                                    WHERE (V_PRD_DIM_CRNT.PRD_DET_LVL = 'WEEK')
                                    GROUP BY V_PRD_DIM_CRNT.MONTH_IN_QUARTER_DSC
                                ) B
                                WHERE (A.MONTH_IN_QUARTER_DSC = B.MONTH_DSC)
                            )
                            UNION ALL
                            SELECT
                            A.PRD_ID , A.PRD_KEY  ,
                            A.FILTER_NAME, A.PRD_DET_LVL,
                            ('    ')::VARCHAR(4) AS YEAR_DSC,
                            A.QUARTER_IN_YEAR_DSC   ,
                            ('        ')::VARCHAR(8)  AS MONTH_IN_QUARTER_DSC,
                            ('                                                  ')::VARCHAR(50) AS WEEK_IN_MONTH_DSC   ,
                            ('    ')::   VARCHAR(4)  AS YR_DSC,
                            B.QTR_DSC   ,
                            ('        ')::VARCHAR(8)  AS MONTH_DSC,
                            ('                                                  ')::VARCHAR(50) AS WEEK_DSC ,
                            B.NEW_ITEM_RANGE_START,
                            B.NEW_ITEM_RANGE_END,
                            A.PRD_TAG, A.YEAR_ORD,
                            A.MONTH_ORD, A.NUM_OF_WKS ,
                            A.PRD_DSC_LONG , A.PRD_DSC_SHORT,
                            A.PRD_DSP_FOLDER, A.PRD_DSP_ORDER,
                            A.PRD_ID_YAGO , A.QUARTER_ORD  ,
                            A.WEEK_ORD, A.WK_ENDING_DT ,
                            A.WK_ENDING_DSC , A.PRD_RLS_IND,
                            A.CALENDAR_CADENCE, A.PCKG_ID, A.INTEGRATION
                            FROM V_PRD_DIM_CRNT A   ,
                            (SELECT
                                V_PRD_DIM_CRNT.QUARTER_IN_YEAR_DSC AS QTR_DSC ,
                                MIN(V_PRD_DIM_CRNT.WK_ENDING_DT)   AS NEW_ITEM_RANGE_START,
                                MAX(V_PRD_DIM_CRNT.WK_ENDING_DT)   AS NEW_ITEM_RANGE_END
                                FROM V_PRD_DIM_CRNT V_PRD_DIM_CRNT
                                WHERE (V_PRD_DIM_CRNT.PRD_DET_LVL = 'WEEK')
                                GROUP BY V_PRD_DIM_CRNT.QUARTER_IN_YEAR_DSC
                            ) B
                            WHERE (A.QUARTER_IN_YEAR_DSC = B.QTR_DSC)
                        )
                        UNION ALL
                        SELECT
                        A.PRD_ID   ,
                        A.PRD_KEY  ,
                        A.FILTER_NAME,
                        A.PRD_DET_LVL,
                        A.YEAR_DSC ,
                        ('       ')::VARCHAR(7)  AS QUARTER_IN_YEAR_DSC ,
                        ('        ')::VARCHAR(8)  AS MONTH_IN_QUARTER_DSC,
                        ('                                                  ')::VARCHAR(50) AS WEEK_IN_MONTH_DSC   ,
                        B.YR_DSC,
                        ('       ')::VARCHAR(7)  AS QTR_DSC ,
                        ('        ')::VARCHAR(8)  AS MONTH_DSC ,
                        ('                                                  ')::VARCHAR(50) AS WEEK_DSC,
                        B.NEW_ITEM_RANGE_START , B.NEW_ITEM_RANGE_END ,
                        A.PRD_TAG , A.YEAR_ORD,  A.MONTH_ORD,
                        A.NUM_OF_WKS, A.PRD_DSC_LONG  , A.PRD_DSC_SHORT ,
                        A.PRD_DSP_FOLDER, A.PRD_DSP_ORDER , A.PRD_ID_YAGO   ,
                        A.QUARTER_ORD   , A.WEEK_ORD, A.WK_ENDING_DT  ,
                        A.WK_ENDING_DSC, 
                        A.PRD_RLS_IND,
                        A.CALENDAR_CADENCE, A.PCKG_ID, A.INTEGRATION
                        FROM V_PRD_DIM_CRNT A ,
                        (SELECT
                            V_PRD_DIM_CRNT.YEAR_DSC AS YR_DSC,
                            MIN(V_PRD_DIM_CRNT.WK_ENDING_DT) AS NEW_ITEM_RANGE_START,
                            MAX(V_PRD_DIM_CRNT.WK_ENDING_DT) AS NEW_ITEM_RANGE_END
                            FROM V_PRD_DIM_CRNT V_PRD_DIM_CRNT
                            WHERE (V_PRD_DIM_CRNT.PRD_DET_LVL = 'WEEK')
                            GROUP BY V_PRD_DIM_CRNT.YEAR_DSC
                        ) B
                        WHERE (A.YEAR_DSC = B.YR_DSC)
                    )
                    UNION ALL
                    SELECT
                    A.PRD_ID, A.PRD_KEY,
                    A.FILTER_NAME, A.PRD_DET_LVL,
                    A.YEAR_DSC , A.QUARTER_IN_YEAR_DSC,
                    A.MONTH_IN_QUARTER_DSC, A.WEEK_IN_MONTH_DSC  ,
                    ('    ')::VARCHAR(4)  AS YR_DSC   ,
                    ('       ')::VARCHAR(7)  AS QTR_DSC  ,
                    ('        ')::VARCHAR(8)  AS MONTH_DSC,
                    ('                                                  ')::VARCHAR(50) AS WEEK_DSC ,
                    B.NEW_ITEM_RANGE_START,
                    B.NEW_ITEM_RANGE_END  ,  A.PRD_TAG ,
                    A.YEAR_ORD, A.MONTH_ORD   ,
                    A.NUM_OF_WKS  , A.PRD_DSC_LONG,
                    A.PRD_DSC_SHORT , A.PRD_DSP_FOLDER,
                    A.PRD_DSP_ORDER , A.PRD_ID_YAGO ,
                    A.QUARTER_ORD , A.WEEK_ORD,
                    A.WK_ENDING_DT, A.WK_ENDING_DSC, A.PRD_RLS_IND, 
                    A.CALENDAR_CADENCE, A.PCKG_ID, A.INTEGRATION
                    FROM V_PRD_DIM_CRNT A ,
                    (SELECT
                        V_PRD_DIM_CRNT.FILTER_NAME   ,
                        MIN(V_PRD_DIM_CRNT.WK_ENDING_DT) AS NEW_ITEM_RANGE_START,
                        MAX(V_PRD_DIM_CRNT.WK_ENDING_DT) AS NEW_ITEM_RANGE_END
                        FROM V_PRD_DIM_CRNT V_PRD_DIM_CRNT
                        WHERE (V_PRD_DIM_CRNT.PRD_DET_LVL = 'CUME')
                        GROUP BY V_PRD_DIM_CRNT.FILTER_NAME
                    ) B
                    WHERE (A.FILTER_NAME = B.FILTER_NAME)
                ) V_PRD_DIM_CRNT
            ) V_PRD_DIM_CRNT ;",false,false
2021-01-04 17:35:01.681 -0800,V_PRD_DIM_YE,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"CREATE OR REPLACE VIEW V_PRD_DIM_YE AS
        SELECT
        PRD_DIM.PRD_ID, PRD_DIM.PRD_KEY,
        PRD_DIM.PRD_ID_YAGO, PRD_DIM.PRD_DSC_SHORT,
        PRD_DIM.PRD_DSC_LONG, PRD_DIM.PRD_DSP_ORDER,
        PRD_DIM.PRD_DET_LVL, PRD_DIM.PRD_TAG,
        PRD_DIM.WK_ENDING_DT, PRD_DIM.WK_ENDING_DSC,
        PRD_DIM.NUM_OF_WKS, PRD_DIM.FILTER_NAME,
        PRD_DIM.PRD_DSP_FOLDER, PRD_DIM.WEEK_ORD,
        PRD_DIM.WEEK_IN_MONTH_DSC, PRD_DIM.MONTH_ORD,
        PRD_DIM.MONTH_IN_QUARTER_DSC, PRD_DIM.QUARTER_ORD,
        PRD_DIM.QUARTER_IN_YEAR_DSC, PRD_DIM.YEAR_ORD,
        PRD_DIM.YEAR_DSC, PRD_DIM.PRD_RLS_IND,
        PRD_DIM.CALENDAR_CADENCE, PRD_DIM.PCKG_ID,
        PRD_DIM.INTEGRATION
        FROM PRD_DIM PRD_DIM
        WHERE
        (
                PRD_DIM.WK_ENDING_DT <= '2009-12-31'::DATE
        );",false,false
2021-01-04 17:35:17.390 -0800,V_PRD_INTERVAL,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"CREATE OR REPLACE VIEW V_PRD_INTERVAL AS SELECT PRD_ID,PRD_ID_YAGO,
        WK_ENDING_DT,WK_ENDING_DSC,PRD_KEY,PRD_DSC_SHORT,PRD_DSC_LONG,PRD_DSP_FOLDER,NUM_OF_WKS,
        PRD_DSP_ORDER,PRD_DET_LVL,PRD_TAG,FILTER_NAME,WEEK_IN_MONTH_DSC,MONTH_IN_QUARTER_DSC,
        QUARTER_IN_YEAR_DSC,YEAR_DSC,MONTH_ORD,QUARTER_ORD,WEEK_ORD,YEAR_ORD,PRD_RLS_IND,
        FACT_WK_ENDING_DT,FACT_PRD_ID,FACT_PRD_KEY,CALENDAR_CADENCE, PCKG_ID, INTEGRATION
        FROM V_PRD_INTERVAL_BUILD;",false,false
2021-01-04 17:35:09.525 -0800,V_PRD_INTERVAL_BUILD,,CSNLSSYNDPI_PROD,PUBLIC,NIELSENBUY_CS_OD_BE_RW_ROLE,,"CREATE OR REPLACE VIEW V_PRD_INTERVAL_BUILD AS
        SELECT
        A.PRD_ID, A.PRD_ID_YAGO,
        A.WK_ENDING_DT,  A.WK_ENDING_DSC,
        A.PRD_KEY, A.PRD_DSC_SHORT,
        A.PRD_DSC_LONG, A.PRD_DSP_FOLDER,
        A.NUM_OF_WKS,  A.PRD_DSP_ORDER,
        A.PRD_DET_LVL, A.PRD_TAG,
        A.FILTER_NAME, A.WEEK_IN_MONTH_DSC,
        A.MONTH_IN_QUARTER_DSC, A.QUARTER_IN_YEAR_DSC,
        A.YEAR_DSC, A.MONTH_ORD,
        A.QUARTER_ORD, A.WEEK_ORD,
        A.YEAR_ORD, A.PRD_RLS_IND,
        B.WK_ENDING_DT AS FACT_WK_ENDING_DT,
        B.PRD_ID AS FACT_PRD_ID,
        B.PRD_KEY AS FACT_PRD_KEY,
        A.CALENDAR_CADENCE, A.PCKG_ID,
        A.INTEGRATION
        FROM V_PRD_DIM_CRNT A,
        V_PRD_DIM_CRNT B
        WHERE
        (
            (
                (
                        B.WK_ENDING_DT >= DATEADD(DAY, -721, TO_TIMESTAMP_NTZ(A.WK_ENDING_DT))
                )
                AND ( B.WK_ENDING_DT <= A.WK_ENDING_DT)
        )
        AND(B.PRD_DET_LVL = 'WEEK')
        );",false,false